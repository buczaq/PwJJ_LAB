package testatistics;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.TreeMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import utility.TemplateParser;
import org.jfree.chart.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import javax.swing.JFileChooser;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import utility.AnswerCardParser;
import utility.ResultsStatistics;

/**
 *
 * @author buczak
 */
public class TestatisticsGUI extends javax.swing.JFrame {
    
    File templateFile;
    File answersFile;
        
    TreeMap<String, String> answerPattern = new TreeMap<>();
    Vector<TreeMap<String, String>> answerCardCollection = new Vector<>();
    
    TreeMap<Integer, Integer> histogramData = new TreeMap<Integer, Integer>();
    TreeMap<Float, Integer> markHistogramData = new TreeMap<Float, Integer>();
    
    TemplateParser tparser = new TemplateParser();
    AnswerCardParser acparser = new AnswerCardParser();
    
    ResultsStatistics stats = new ResultsStatistics();
    
    static boolean isTemplateChosen = false;
    
    public TestatisticsGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        chooseTemplateFileButton = new javax.swing.JButton();
        creditsLabel = new javax.swing.JLabel();
        exitButton = new javax.swing.JButton();
        statisticsPanel = new javax.swing.JPanel();
        chooseAnswerCardsButton = new javax.swing.JButton();
        histogramButton = new javax.swing.JButton();
        infoLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMaximumSize(new java.awt.Dimension(640, 500));
        setMinimumSize(new java.awt.Dimension(640, 500));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        chooseTemplateFileButton.setText("Wybierz plik z szablonem odpowiedzi");
        chooseTemplateFileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseTemplateFileButtonMouseClicked(evt);
            }
        });
        chooseTemplateFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTemplateFileButtonActionPerformed(evt);
            }
        });

        creditsLabel.setFont(new java.awt.Font("Noto Sans", 0, 12)); // NOI18N
        creditsLabel.setText("Testatistics - Krzysztof Buczak, 2018");

        exitButton.setText("Wyjście");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chooseTemplateFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addComponent(creditsLabel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(chooseTemplateFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(creditsLabel)
                .addGap(21, 21, 21))
        );

        getContentPane().add(mainPanel, "card3");

        statisticsPanel.setMaximumSize(new java.awt.Dimension(640, 500));
        statisticsPanel.setMinimumSize(new java.awt.Dimension(640, 500));
        statisticsPanel.setName(""); // NOI18N

        chooseAnswerCardsButton.setText("Wczytaj karty odpowiedzi studentów");
        chooseAnswerCardsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAnswerCardsButtonActionPerformed(evt);
            }
        });

        histogramButton.setText("Generuj histogram (oceny)");
        histogramButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                histogramButtonActionPerformed(evt);
            }
        });

        infoLabel.setText("Nie wczytano kart!");

        jButton1.setText("Generuj histogram (punkty)");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout statisticsPanelLayout = new javax.swing.GroupLayout(statisticsPanel);
        statisticsPanel.setLayout(statisticsPanelLayout);
        statisticsPanelLayout.setHorizontalGroup(
            statisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticsPanelLayout.createSequentialGroup()
                .addGroup(statisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(statisticsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chooseAnswerCardsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE))
                    .addGroup(statisticsPanelLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(infoLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(statisticsPanelLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addGroup(statisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(histogramButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        statisticsPanelLayout.setVerticalGroup(
            statisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statisticsPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(chooseAnswerCardsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(infoLabel)
                .addGap(49, 49, 49)
                .addComponent(histogramButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(261, Short.MAX_VALUE))
        );

        getContentPane().add(statisticsPanel, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseAnswerCardsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAnswerCardsButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            answersFile = fileChooser.getSelectedFile();
            String filename = answersFile.getAbsolutePath();
            answerCardCollection = acparser.generateAnswerCardCollection(filename);
            infoLabel.setText("Załadowano karty odpowiedzi.");
        }
    }//GEN-LAST:event_chooseAnswerCardsButtonActionPerformed

    private void chooseTemplateFileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseTemplateFileButtonMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseTemplateFileButtonMouseClicked

    private void chooseTemplateFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTemplateFileButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            templateFile = fileChooser.getSelectedFile();
            answerPattern = tparser.generateAnswerPattern(templateFile);
            this.mainPanel.setVisible(false);
            this.statisticsPanel.setVisible(true);
        }
    }//GEN-LAST:event_chooseTemplateFileButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void histogramButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_histogramButtonActionPerformed
        markHistogramData = stats.createMarksHistogram(answerPattern, answerCardCollection);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (Float key : markHistogramData.keySet()) {
            dataset.addValue(markHistogramData.get(key), "Ocena", key);
            System.out.print(key + " " + markHistogramData.get(key) + " ");
            System.out.print(dataset.getValue("Ocena", key));
            System.out.println();
        }
        JFreeChart chart = ChartFactory.createBarChart("Histogram ocen", "Ocena", "Czestotliwość pojawiania się", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Oceny", chart);
        frame.setVisible(true);
        frame.setSize(400, 400);
    }//GEN-LAST:event_histogramButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        histogramData = stats.createResultsHistogram(answerPattern, answerCardCollection);
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        int size = answerCardCollection.size();
        for (int i = 1; i < size; i++) {
            if (histogramData.get(i) != null) {
                dataset.addValue((Number)(histogramData.get(i)), "Punkty", i);
                System.out.print(i + " " + histogramData.get(i) + " ");
                System.out.print(dataset.getValue("Punkty", i));
                System.out.println();
            } else histogramData.put(i, 0);
        }
        JFreeChart chart = ChartFactory.createBarChart("Histogram punktów", "Punkty", "Czestotliwość pojawiania się", dataset, PlotOrientation.VERTICAL, false, true, false);
        CategoryPlot plot = chart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);
        ChartFrame frame = new ChartFrame("Punkty", chart);
        frame.setVisible(true);
        frame.setSize(400, 400);        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestatisticsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestatisticsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestatisticsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestatisticsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Thread.sleep(3500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(TestatisticsGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                TestatisticsGUI startScreen = new TestatisticsGUI();
                startScreen.setLocationRelativeTo(null);
                startScreen.setVisible(true);
                startScreen.mainPanel.setVisible(true);
                startScreen.statisticsPanel.setVisible(false);
                //startScreen.mainPanel.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseAnswerCardsButton;
    private javax.swing.JButton chooseTemplateFileButton;
    private javax.swing.JLabel creditsLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton histogramButton;
    private javax.swing.JLabel infoLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JPanel statisticsPanel;
    // End of variables declaration//GEN-END:variables
}
